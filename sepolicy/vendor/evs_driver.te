# evs_mock mock hardware driver service
type hal_evs_driver, domain, coredomain;
hal_server_domain(hal_evs_driver, hal_evs)

# allow init to launch processes in this context
type hal_evs_driver_exec, exec_type, file_type, vendor_file_type;
init_daemon_domain(hal_evs_driver)

# Allow use of USB devices, gralloc buffers, and surface flinger
allow hal_evs_driver device:dir { open read };
allow hal_evs_driver video_device:chr_file { ioctl open read write map };
hal_client_domain(hal_evs_driver, hal_graphics_allocator);

allow hal_evs_driver gpu_device:chr_file { getattr ioctl open read write };
binder_call(hal_evs_driver, surfaceflinger);
allow hal_evs_driver surfaceflinger_service:service_manager find;
allow hal_evs_driver hal_graphics_composer_default:fd use;
allow hal_evs_driver hal_graphics_allocator_default_tmpfs:file { read write };
# commented out due to conflict with global neverallow rule
# allow hal_evs_driver self:capability dac_override;
allow hal_evs_driver servicemanager:binder call;

allow hal_evs_driver hal_evs_hwservice:hwservice_manager add;
allow hal_evs_driver hidl_base_hwservice:hwservice_manager add;

# reported by audit2allow when camera is active
allow hal_evs_driver hal_configstore_ISurfaceFlingerConfigs:hwservice_manager find;
allow hal_evs_driver hal_configstore_default:binder call;
allow hal_evs_driver shell:binder { call transfer };
